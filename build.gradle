import org.objectweb.asm.ClassWriter
import java.time.Instant
import org.objectweb.asm.Opcodes as ops

buildscript {
	dependencies {
		classpath("org.ow2.asm:asm:9.3")
	}
}

plugins {
	id 'fabric-loom' version '0.12-SNAPSHOT'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

version = '0.1.4'
group = 'xland.mcmod'

repositories {
	maven {
            url = 'https://lss233.littleservice.cn/repositories/minecraft'
            name = 'Lss233'
        }
    maven { url = 'https://maven.aliyun.com/repository/public' }
}

dependencies {
	minecraft "com.mojang:minecraft:1.19.1-rc2"
	mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:0.14.8"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "META-INF/LICENSE_${project.archivesBaseName}.txt"}
	}
	manifest {
		attributes([
		        "Specification-Title": "Remove Sign Tips",
				"Specification-Vendor": "teddyxlandlee",
				"Specification-Version": "1",
				"Implementation-Title": project.name,
				"Implementation-Version": project.version,
				"Implementation-Vendor": "teddyxlandlee,QWERTY770",
				"Implementation-Timestamp": Instant.now(),
				"MixinConfigs": "faqms-forge.mixins.json"
		])
	}
}

task generateModClass {
	def className = "utio90j4kIJqJAV7zYH6o/A"
	def modId = "nosigntip"
	def file = new File(processResources.destinationDir, "${className}.class")
	afterEvaluate {
		file.parentFile.mkdirs()
		file.createNewFile()
		def writer = new ClassWriter(3)
		writer.visit(ops.V1_6, ops.ACC_PUBLIC, className, null, "java/lang/Object", null)
		writer.visitMethod(ops.ACC_PUBLIC, "<init>", "()V", null, null).with {
			it.visitVarInsn(ops.ALOAD, 0)
			it.visitMethodInsn(ops.INVOKESPECIAL, "java/lang/Object", "<init>", "()V", false)
			it.visitInsn(ops.RETURN)
			it.visitMaxs(-1, -1)
		}
		writer.visitAnnotation("Lnet/minecraftforge/fml/common/Mod;", true).with {
			it.visit("value", modId)
		}
		writer.visitSource(null, "ASM Generated")
		file.newOutputStream().with {
			it.write(writer.toByteArray())
			it.close()
		}
	}
}

processResources.dependsOn(generateModClass)
